<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE library PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN" "../../../../tools/boostbook/dtd/boostbook.dtd">

<!--
  Copyright (c) 2019 Vinnie Falco (vinnie.falco@gmail.com)

  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

  Official repository: https://github.com/CPPAlliance/url
-->

<informaltable frame="all">
  <tgroup cols="4">
    <colspec colname="a"/><colspec colname="b"/><colspec colname="c"/><colspec colname="d"/>
    <thead><row>
      <entry valign="center" namest="a" nameend="c">
        <bridgehead renderas="sect2">URL</bridgehead>
      </entry>
      <entry valign="center" namest="d" nameend="d">
        <bridgehead renderas="sect2">Encoding</bridgehead>
      </entry>
    </row></thead>
    <tbody><row>
      <entry valign="top">
        <bridgehead renderas="sect3">Classes</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__authority_view">authority_view</link></member>
          <member><link linkend="url.ref.boost__urls__const_string">const_string</link></member>
          <member><link linkend="url.ref.boost__urls__const_string__factory">const_string::factory</link></member>
          <member><link linkend="url.ref.boost__urls__ipv4_address">ipv4_address</link></member>
          <member><link linkend="url.ref.boost__urls__ipv6_address">ipv6_address</link></member>
          <member><link linkend="url.ref.boost__urls__params">params</link></member>
          <member><link linkend="url.ref.boost__urls__params_encoded">params_encoded</link></member>
          <member><link linkend="url.ref.boost__urls__params_encoded_view">params_encoded_view</link></member>
          <member><link linkend="url.ref.boost__urls__params_view">params_view</link></member>
          <member><link linkend="url.ref.boost__urls__query_param">query_param</link></member>
          <member><link linkend="url.ref.boost__urls__query_param_view">query_param_view</link></member>
          <member><link linkend="url.ref.boost__urls__segments">segments</link></member>
          <member><link linkend="url.ref.boost__urls__segments_encoded">segments_encoded</link></member>
          <member><link linkend="url.ref.boost__urls__segments_encoded_view">segments_encoded_view</link></member>
          <member><link linkend="url.ref.boost__urls__segments_view">segments_view</link></member>
          <member><link linkend="url.ref.boost__urls__static_pool">static_pool</link></member>
          <member><link linkend="url.ref.boost__urls__static_pool_allocator">static_pool_allocator</link></member>
          <member><link linkend="url.ref.boost__urls__static_url">static_url</link></member>
          <member><link linkend="url.ref.boost__urls__url">url</link></member>
          <member><link linkend="url.ref.boost__urls__url_view">url_view</link></member>
        </simplelist>
      </entry>
     
      <entry valign="top">
        <bridgehead renderas="sect3">Functions</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__parse_absolute_uri">parse_absolute_uri</link></member>
          <member><link linkend="url.ref.boost__urls__parse_authority">parse_authority</link></member>
          <member><link linkend="url.ref.boost__urls__parse_path">parse_path</link></member>
          <member><link linkend="url.ref.boost__urls__parse_path_abempty">parse_path_abempty</link></member>
          <member><link linkend="url.ref.boost__urls__parse_path_absolute">parse_path_absolute</link></member>
          <member><link linkend="url.ref.boost__urls__parse_path_noscheme">parse_path_noscheme</link></member>
          <member><link linkend="url.ref.boost__urls__parse_path_rootless">parse_path_rootless</link></member>
          <member><link linkend="url.ref.boost__urls__parse_query_params">parse_query_params</link></member>
          <member><link linkend="url.ref.boost__urls__parse_relative_ref">parse_relative_ref</link></member>
          <member><link linkend="url.ref.boost__urls__parse_uri">parse_uri</link></member>
          <member><link linkend="url.ref.boost__urls__parse_uri_reference">parse_uri_reference</link></member>
          <member><link linkend="url.ref.boost__urls__resolve">resolve</link></member>
        </simplelist>
        <bridgehead renderas="sect3">Operators</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__operator_lt__lt_">operator&lt;&lt;</link></member>
        </simplelist>
      </entry>
      <entry valign="top">
        <bridgehead renderas="sect3">Aliases</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__error_category">error_category</link></member>
          <member><link linkend="url.ref.boost__urls__error_code">error_code</link></member>
          <member><link linkend="url.ref.boost__urls__error_condition">error_condition</link></member>
          <member><link linkend="url.ref.boost__urls__result">result</link></member>
          <member><link linkend="url.ref.boost__urls__string_view">string_view</link></member>
          <member><link linkend="url.ref.boost__urls__system_error">system_error</link></member>
        </simplelist>
        <bridgehead renderas="sect3">Constants</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__error">error</link></member>
          <member><link linkend="url.ref.boost__urls__host_type">host_type</link></member>
          <member><link linkend="url.ref.boost__urls__scheme">scheme</link></member>
        </simplelist>
      </entry>
      <entry valign="top">
        <bridgehead renderas="sect3">Functions</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__pct_decode">pct_decode</link></member>
          <member><link linkend="url.ref.boost__urls__pct_decode_bytes_unchecked">pct_decode_bytes_unchecked</link></member>
          <member><link linkend="url.ref.boost__urls__pct_decode_to_value">pct_decode_to_value</link></member>
          <member><link linkend="url.ref.boost__urls__pct_decode_unchecked">pct_decode_unchecked</link></member>
          <member><link linkend="url.ref.boost__urls__pct_encode">pct_encode</link></member>
          <member><link linkend="url.ref.boost__urls__pct_encode_bytes">pct_encode_bytes</link></member>
          <member><link linkend="url.ref.boost__urls__pct_encode_to_value">pct_encode_to_value</link></member>
          <member><link linkend="url.ref.boost__urls__validate_pct_encoding">validate_pct_encoding</link></member>
        </simplelist>
        <bridgehead renderas="sect3">Types</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__pct_decode_opts">pct_decode_opts</link></member>
          <member><link linkend="url.ref.boost__urls__pct_encode_opts">pct_encode_opts</link></member>
          <member><link linkend="url.ref.boost__urls__pct_encoded_str">pct_encoded_str</link></member>
        </simplelist>
        <bridgehead renderas="sect3">Concepts</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.grammar_rules.charset"><emphasis>CharSet</emphasis></link></member>
        </simplelist>
      </entry>
    </row></tbody>
  </tgroup>
  <tgroup cols="4">
    <colspec colname="a"/><colspec colname="b"/><colspec colname="c"/><colspec colname="d"/>
    <thead><row>
      <entry valign="center" namest="a" nameend="b">
        <bridgehead renderas="sect2">RFC3986</bridgehead>
      </entry>
      <entry valign="center" namest="c" nameend="d">
        <bridgehead renderas="sect2">Grammar</bridgehead>
      </entry>
    </row></thead>
    <tbody><row>
      <entry valign="top">
        <bridgehead renderas="sect3">Types (1/2)</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__absolute_uri_rule">absolute_uri_rule</link></member>
          <member><link linkend="url.ref.boost__urls__authority_rule">authority_rule</link></member>
          <member><link linkend="url.ref.boost__urls__fragment_rule">fragment_rule</link></member>
          <member><link linkend="url.ref.boost__urls__fragment_part_rule">fragment_part_rule</link></member>
          <member><link linkend="url.ref.boost__urls__hier_part_rule">hier_part_rule</link></member>
          <member><link linkend="url.ref.boost__urls__host_rule">host_rule</link></member>
          <member><link linkend="url.ref.boost__urls__ip_literal_rule">ip_literal_rule</link></member>
          <member><link linkend="url.ref.boost__urls__ipv_future_rule">ipv_future_rule</link></member>
          <member><link linkend="url.ref.boost__urls__parsed_path">parsed_path</link></member>
          <member><link linkend="url.ref.boost__urls__path_abempty_rule">path_abempty_rule</link></member>
          <member><link linkend="url.ref.boost__urls__path_absolute_rule">path_absolute_rule</link></member>
          <member><link linkend="url.ref.boost__urls__path_noscheme_rule">path_noscheme_rule</link></member>
          <member><link linkend="url.ref.boost__urls__path_rootless_rule">path_rootless_rule</link></member>
          <member><link linkend="url.ref.boost__urls__pct_encoded_rule">pct_encoded_rule</link></member>
          <member><link linkend="url.ref.boost__urls__port_rule">port_rule</link></member>
          <member><link linkend="url.ref.boost__urls__port_part_rule">port_part_rule</link></member>
          <member><link linkend="url.ref.boost__urls__query_rule">query_rule</link></member>
          <member><link linkend="url.ref.boost__urls__query_part_rule">query_part_rule</link></member>
          <member><link linkend="url.ref.boost__urls__relative_part_rule">relative_part_rule</link></member>
          <member><link linkend="url.ref.boost__urls__relative_ref_rule">relative_ref_rule</link></member>
          <member><link linkend="url.ref.boost__urls__scheme_rule">scheme_rule</link></member>
          <member><link linkend="url.ref.boost__urls__scheme_part_rule">scheme_part_rule</link></member>
          <member><link linkend="url.ref.boost__urls__segment_rule">segment_rule</link></member>
        </simplelist>
      </entry>
      <entry valign="top">
        <bridgehead renderas="sect3">Types (2/2)</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__segment_nz_rule">segment_nz_rule</link></member>
          <member><link linkend="url.ref.boost__urls__segment_nz_nc_rule">segment_nz_nc_rule</link></member>
          <member><link linkend="url.ref.boost__urls__uri_rule">uri_rule</link></member>
          <member><link linkend="url.ref.boost__urls__uri_reference_rule">uri_reference_rule</link></member>
          <member><link linkend="url.ref.boost__urls__userinfo_rule">userinfo_rule</link></member>
        </simplelist>
        <bridgehead renderas="sect3">Constants</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__fragment_chars">fragment_chars</link></member>
          <member><link linkend="url.ref.boost__urls__gen_delim_chars">gen_delim_chars</link></member>
          <member><link linkend="url.ref.boost__urls__pchars">pchars</link></member>
          <member><link linkend="url.ref.boost__urls__query_chars">query_chars</link></member>
          <member><link linkend="url.ref.boost__urls__reserved_chars">reserved_chars</link></member>
          <member><link linkend="url.ref.boost__urls__subdelim_chars">subdelim_chars</link></member>
          <member><link linkend="url.ref.boost__urls__unreserved_chars">unreserved_chars</link></member>
        </simplelist>
        <bridgehead renderas="sect3">CharSets</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__fragment_chars_t">fragment_chars_t</link></member>
          <member><link linkend="url.ref.boost__urls__gen_delim_chars_t">gen_delim_chars_t</link></member>
          <member><link linkend="url.ref.boost__urls__pchars_t">pchars_t</link></member>
          <member><link linkend="url.ref.boost__urls__query_chars_t">query_chars_t</link></member>
          <member><link linkend="url.ref.boost__urls__reserved_chars">reserved_chars_t</link></member>
          <member><link linkend="url.ref.boost__urls__subdelim_chars_t">subdelim_chars_t</link></member>
          <member><link linkend="url.ref.boost__urls__unreserved_chars_t">unreserved_chars_t</link></member>
        </simplelist>
      </entry>
      <entry valign="top">
        <bridgehead renderas="sect3">Classes</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__grammar__char_literal">char_literal</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__elements">elements</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__optional">optional</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__parse_tag">parse_tag</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__lut_chars">lut_chars</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__range">range</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__token">token</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__unsigned_decimal">unsigned_decimal</link></member>
        </simplelist>
        <bridgehead renderas="sect3">CharSets</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__grammar__all_chars_t">all_chars_t</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__alnum_chars_t">alnum_chars_t</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__alpha_chars_t">alpha_chars_t</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__digit_chars_t">digit_chars_t</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__hexdig_chars_t">hexdig_chars_t</link></member>
        </simplelist>
        <bridgehead renderas="sect3">Constants</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__grammar__all_chars">all_chars</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__alnum_chars">alnum_chars</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__alpha_chars">alpha_chars</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__condition">condition</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__digit_chars">digit_chars</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__error">error</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__hexdig_chars">hexdig_chars</link></member>
        </simplelist>
      </entry>
      <entry valign="top">
        <bridgehead renderas="sect3">Functions</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__grammar__ascii_tolower">ascii_tolower</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__find_if">find_if</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__find_if_not">find_if_not</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__hexdig_value">hexdig_value</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__parse">parse</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__parse_all">parse_all</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__parse_string">parse_string</link></member>
        </simplelist>
        <bridgehead renderas="sect3">Type Traits</bridgehead>
        <simplelist type="vert" columns="1">
          <member><link linkend="url.ref.boost__urls__grammar__is_charset">is_charset</link></member>
          <member><link linkend="url.ref.boost__urls__grammar__is_range">is_range</link></member>
        </simplelist>
      </entry>
    </row></tbody>
  </tgroup>
</informaltable>

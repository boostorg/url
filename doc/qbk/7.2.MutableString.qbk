[/
    Copyright (c) 2022 Alan de Freitas (alandefreitas@gmail.com)

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

    Official repository: https://github.com/CPPAlliance/url
]

[section MutableString]

A ['MutableString] nominally represents a modifiable, contiguous
buffer whose `value_type` is char. Objects which satisfy these
requirements may be appended to and assigned to by algorithms
which store the result of applying percent-decoding to various
components of URLs and other things.

[heading Related Identifiers]

* __pct_encoded_view__
* [link url.ref.boost__urls__pct_encoded_rule `pct_encoded_rule`]

[heading Requirements]

In this table:

* `T` is a type meeting the requirements of ['MutableString]
* `s` is a possibly-const value of type `T`
* `first`, `last` are __InputIterator__ whose `value_type` is `char`
  and form the valid character sequence `[ first, last )`

[table Valid expressions
[[Expression] [Type] [Semantics, Pre/Post-conditions]]
[
    [
    ```
    T::value_type
    ```
    ]
    [`char`]
    [
        `std::is_same_v< T::value_type, char >`
    ]
][
    [
    ```
    s.assign(first,last)
    ```
    ]
    []
    [
        Assigns the characters in the range `[first, last)` to `s`.
    ]
][
    [
    ```
    s.append(first,last)
    ```
    ]
    []
    [
        Appends the characters in the range `[first, last)` to `s`.
    ]
]]

[heading Exemplar]

[snippet_mutable_string_exemplar]

[heading Models]

* __std_string__

[heading See also]

* __pct_encoded_view__

[endsect]
